name: CI — All-in-One

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    name: Lint + Unit + API + E2E + Selenium + VisualAI + AI steps
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    env:
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # opcional para ai/generate_tests.py

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps

      - name: Lint (Ruff)
        run: ruff check .

      # ===================== AI STEPS =====================
      - name: AI — Generate Test Suggestions (LLM)
        if: ${{ env.OPENAI_API_KEY != '' }}
        continue-on-error: true
        run: |
          mkdir -p ai-output
          # Si existe un prompt de historia de usuario, úsalo; si no, usa texto por defecto
          STORY_FILE="docs/user_story.md"
          if [ ! -f "$STORY_FILE" ]; then
            echo "As a user, I want to log in securely so that I can access my account." > "$STORY_FILE"
          fi
          python ai/generate_tests.py "$(cat "$STORY_FILE")" > ai-output/generated_tests.json
          echo "AI test suggestions written to ai-output/generated_tests.json"
      - name: AI — Attach Suggestions to Job Summary
        if: ${{ env.OPENAI_API_KEY != '' }}
        run: |
          echo "### 🤖 AI — Generated Test Suggestions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f ai-output/generated_tests.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat ai-output/generated_tests.json | head -c 12000 >> $GITHUB_STEP_SUMMARY || true
            echo "\n\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "_No generated tests found (step skipped or failed)._ " >> $GITHUB_STEP_SUMMARY
          fi
      - name: AI — Risk-based Selection (git diff)
        continue-on-error: true
        run: |
          mkdir -p ai-output
          python ai/risk_selector.py --diff HEAD~1..HEAD > ai-output/risk_selection.json || echo "{}" > ai-output/risk_selection.json
          echo "Risk selection written to ai-output/risk_selection.json"
      - name: AI — Attach Risk Selection to Job Summary
        run: |
          echo "### 🧠 AI — Risk-based Test Selection" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat ai-output/risk_selection.json | head -c 12000 >> $GITHUB_STEP_SUMMARY || true
          echo "\n\`\`\`" >> $GITHUB_STEP_SUMMARY
      # ====================================================

      - name: Start FastAPI (background)
        run: |
          nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > uvicorn.log 2>&1 &
          for i in {1..20}; do
            if curl -fsS http://127.0.0.1:8000 >/dev/null; then echo "Server up"; break; fi
            sleep 1
          done

      - name: Run tests — Unit + API + E2E (Playwright)
        run: |
          pytest -q qa/tests_unit
          pytest -q qa/tests_api
          pytest -q qa/tests_e2e

      - name: Run tests — Selenium
        run: pytest -q selenium/tests/test_login_selenium.py

      - name: Run tests — Visual AI (Applitools)
        if: ${{ env.APPLITOOLS_API_KEY != '' }}
        env:
          APPLITOOLS_API_KEY: ${{ env.APPLITOOLS_API_KEY }}
        run: pytest -q selenium/tests/test_login_visual_ai.py

      - name: Prepare web report (public/)
        run: |
          mkdir -p public ai-output
          echo "<html><head><meta charset='utf-8'><title>AI-QA-Starter Report</title></head><body>" > public/index.html
          echo "<h1>AI-QA-Starter — CI Report ($GITHUB_REF_NAME)</h1>" >> public/index.html
          echo "<p>Commit: $GITHUB_SHA</p>" >> public/index.html
          echo "<h3>Logs (Uvicorn tail)</h3><pre>" >> public/index.html
          tail -n 500 uvicorn.log >> public/index.html || true
          echo "</pre><h3>AI — Risk Selection (excerpt)</h3><pre>" >> public/index.html
          cat ai-output/risk_selection.json | head -c 6000 >> public/index.html || true
          echo "</pre></body></html>" >> public/index.html

      - name: Upload artifacts (reports + AI outputs)
        uses: actions/upload-artifact@v4
        with:
          name: web-report-${{ github.ref_name }}
          path: |
            public
            ai-output
          if-no-files-found: warn

      - name: Job Summary (quick links)
        run: |
          echo "## CI Outputs — \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 **Report artifact**: \`web-report-${{ github.ref_name }}\` (Artifacts panel)" >> $GITHUB_STEP_SUMMARY
          if [ "${{ env.OPENAI_API_KEY }}" = "" ]; then
            echo "- ⚠️ AI generation skipped (no \`OPENAI_API_KEY\` secret configured)" >> $GITHUB_STEP_SUMMARY
          fi

  deploy-pages:
    name: Deploy GitHub Pages (master only)
    if: github.ref == 'refs/heads/master'
    needs: test-and-build
    runs-on: ubuntu-22.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: web-report-master
          path: ./public

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
