name: CI â€” All-in-One

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    name: Lint + Unit + API + E2E (Playwright) + Selenium (+ Visual AI if key)
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    env:
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps

      - name: Lint (Ruff)
        run: ruff check .

      - name: Start FastAPI (background)
        run: |
          nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > uvicorn.log 2>&1 &
          for i in {1..20}; do
            if curl -fsS http://127.0.0.1:8000 >/dev/null; then echo "Server up"; break; fi
            sleep 1
          done

      - name: Run tests â€” Unit + API + E2E (Playwright)
        run: |
          pytest -q qa/tests_unit
          pytest -q qa/tests_api
          pytest -q qa/tests_e2e

      - name: Run tests â€” Selenium
        run: pytest -q selenium/tests/test_login_selenium.py

      - name: Run tests â€” Visual AI (Applitools)
        if: ${{ env.APPLITOOLS_API_KEY != '' }}
        env:
          APPLITOOLS_API_KEY: ${{ env.APPLITOOLS_API_KEY }}
        run: pytest -q selenium/tests/test_login_visual_ai.py

      - name: Prepare web report (public/)
        run: |
          mkdir -p public
          echo "<html><head><meta charset='utf-8'><title>AI-QA-Starter Report</title></head><body>" > public/index.html
          echo "<h1>AI-QA-Starter â€” CI Report (${GITHUB_REF_NAME})</h1>" >> public/index.html
          echo "<p>Commit: ${GITHUB_SHA}</p>" >> public/index.html
          echo "<h3>Logs</h3><pre>" >> public/index.html
          tail -n 500 uvicorn.log >> public/index.html || true
          echo "</pre></body></html>" >> public/index.html

      - name: Upload report artifact (branch-scoped)
        uses: actions/upload-artifact@v4
        with:
          name: web-report-${{ github.ref_name }}
          path: public
          if-no-files-found: warn

      - name: Job Summary (links)
        run: |
          echo "## CI Outputs â€” \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ”— **Report artifact**: \`web-report-${{ github.ref_name }}\` (see Artifacts panel)" >> $GITHUB_STEP_SUMMARY

  deploy-pages:
    name: Deploy GitHub Pages (master only)
    if: github.ref == 'refs/heads/master'
    needs: test-and-build
    runs-on: ubuntu-22.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: web-report-master
          path: ./public

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
